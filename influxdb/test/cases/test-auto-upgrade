#!/usr/bin/env bash
set -eo pipefail

declare -r SCRIPT_DIR=$(cd $(dirname $0) >/dev/null 2>&1 && pwd)
declare -r V1_DB_PATH=$(dirname ${SCRIPT_DIR})/tmp/v1db
source ${SCRIPT_DIR}/common.sh

declare -r tag=$1 container_name=$2 data=$3 config=$4 logs=$5

declare -ra docker_run_influxd=(
    docker run -i -d
    --name=${container_name}
    -u $(id -u):influxdb
    -p 8086:8086
    -v ${data}:/var/lib/influxdb2
    -v ${config}:/etc/influxdb2
    -v ${V1_DB_PATH}:/var/lib/influxdb
    -e INFLUXDB_INIT_MODE=upgrade
    -e INFLUXDB_INIT_USERNAME=${TEST_USER}
    -e INFLUXDB_INIT_PASSWORD=${TEST_PASSWORD}
    -e INFLUXDB_INIT_ORG=${TEST_ORG}
    -e INFLUXDB_INIT_BUCKET=${TEST_BUCKET}
    -e INFLUXDB_INIT_RETENTION=${TEST_RETENTION_SECONDS}s
    influxdb:${tag} run
)

log_msg Booting 2.x container in upgrade mode
if ! ${docker_run_influxd[@]} > /dev/null; then
    log_msg Error: Failed to launch container
    exit 1
fi
wait_container_ready

log_msg Checking onboarding API post-upgrade
declare onboarding_allowed=$(curl -s localhost:8086/api/v2/setup | jq .allowed)
if [[ ${onboarding_allowed} != 'false' ]]; then
    log_msg Error: Onboarding allowed post-upgrade
    exit 1
fi

declare -r auth_token=$(extract_token ${config}/influx-configs)

log_msg Checking org list post-upgrade
declare orgs=$(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/api/v2/orgs | jq -r .orgs[].name)
if [[ ${orgs} != ${TEST_ORG} ]]; then
    log_msg Error: Bad org list post-upgrade
    echo ${orgs}
    exit 1
fi

log_msg Checking bucket list post-upgrade
declare buckets=($(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/api/v2/buckets | jq -r .buckets[].name | sort -d))
if [[ $(join_array ${buckets[@]}) != "bucket,empty/autogen,_monitoring,mydb/1week,mydb/autogen,_tasks,test/autogen" ]]; then
    log_msg Error: Bad bucket list post-upgrade
    echo ${buckets[@]}
    exit 1
fi

log_msg Checking V1 user list post-upgrade
declare users=($(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/private/legacy/authorizations | jq -r .authorizations[].token | sort -d))
if [[ $(join_array ${users[@]}) != "reader,readerwriter,writer" ]]; then
    log_msg Error: Bad user list post-upgrade
    echo ${users[@]}
    exit 1
fi

log_msg Tearing down 2.x container
docker stop ${container_name} > /dev/null
docker logs ${container_name} > ${logs}/init-docker-stdout.log 2> ${logs}/init-docker-stderr.log
docker rm ${container_name} > /dev/null

if [ ! -f ${data}/influxd.bolt ]; then
    log_msg Error: BoltDB not persisted to host directory
    exit 1
fi

log_msg Booting another 2.x container
if ! ${docker_run_influxd[@]} > /dev/null; then
    log_msg Error: failed to launch container
    exit 1
fi
wait_container_ready

log_msg Checking onboarding API after recreating container
onboarding_allowed=$(curl -s localhost:8086/api/v2/setup | jq .allowed)

if [[ ${onboarding_allowed} != 'false' ]]; then
    log_msg Error: Onboarding allowed after recreating container
    exit 1
fi

log_msg Checking org list after recreating container
declare orgs=$(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/api/v2/orgs | jq -r .orgs[].name)
if [[ ${orgs} != ${TEST_ORG} ]]; then
    log_msg Error: Bad org list after recreating container
    echo ${orgs}
    exit 1
fi

log_msg Checking bucket list after recreating container
declare buckets=($(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/api/v2/buckets | jq -r .buckets[].name | sort -d))
if [[ $(join_array ${buckets[@]}) != "bucket,empty/autogen,_monitoring,mydb/1week,mydb/autogen,_tasks,test/autogen" ]]; then
    log_msg Error: Bad bucket list after recreating container
    echo ${buckets[@]}
    exit 1
fi

log_msg Checking V1 user list after recreating container
declare users=($(curl -s -H "Authorization: Token ${auth_token}" localhost:8086/private/legacy/authorizations | jq -r .authorizations[].token | sort -d))
if [[ $(join_array ${users[@]}) != "reader,readerwriter,writer" ]]; then
    log_msg Error: Bad user list after recreating container
    echo ${users[@]}
    exit 1
fi
