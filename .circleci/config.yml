---
version: 2.1

master_filter: &master_filter
  filters:
    tags:
      ignore: /.*/
    branches:
      only:
        - master

ubuntu_machine: &ubuntu_machine
  machine:
    image: ubuntu-2204:current
    docker_layer_caching: true

workflows:
  version: 2
  ci:
    jobs:
      - build:
          name: build-influxdb
          product: influxdb
      - test-influxdb:
          matrix:
            parameters:
              version: ["2.7"]
      - publish_docker_images:
          <<: *master_filter
      - test-influxdb-binaries:
          matrix:
            parameters:
              product:
                - "influxdb/1.9/data"
                - "influxdb/1.9/meta"
                - "influxdb/1.10/data"
                - "influxdb/1.10/meta"

jobs:
  build:
    parameters:
      product:
        type: string
    docker:
      - image: cimg/go:1.15.6
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run: |
          ./circle-test.sh "<< parameters.product >>"

  test-influxdb:
    <<: *ubuntu_machine
    parameters:
      version:
        type: string
        enum: ["2.7"]
    steps:
      - checkout
      - run: |
          sudo apt-get update &&
          sudo apt-get install -y jq
      - run: bash influxdb/test/test-2x-e2e.sh << parameters.version >>
      - store_artifacts:
          path: influxdb/test/logs
          destination: container-logs

  publish_docker_images:
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - checkout
      - run:
          name: Install Prerequisite Packages
          command: |
            sudo bash -s \<<EOF
              #!/bin/bash
              set -o errexit  \
                  -o nounset  \
                  -o pipefail

              export DEBIAN_FRONTEND=noninteractive
              apt-get update
              apt-get install --yes git
            EOF

            python3 -m pip install -r \
              .circleci/scripts/update_manifest_file/requirements.txt
      - run:
          name: Get Enterprise Information
          command: |
            python3 .circleci/scripts/get_enterprise_info
      - run:
          name: Do Enterprise Release
          command: |
            .circleci/scripts/do-enterprise-release

  test-influxdb-binaries:
    <<: *ubuntu_machine
    parameters:
      product:
        type: string
    steps:
      - checkout
      - run:
          name: Validate Docker Image Binaries
          command: influxdb/test/test-binaries << parameters.product >>
